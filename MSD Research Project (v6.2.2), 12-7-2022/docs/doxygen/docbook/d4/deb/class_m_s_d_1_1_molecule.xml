<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_m_s_d_1_1_molecule" xml:lang="en-US">
<title>MSD.Molecule Class Reference</title>
<indexterm><primary>MSD.Molecule</primary></indexterm>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class_m_s_d_1_1_molecule_1_1___edge">_Edge</link></para>

<para>Represents a specific molecule edge. </para>
</listitem>
            <listitem><para>class <link linkend="_class_m_s_d_1_1_molecule_1_1___edge_iterable">_EdgeIterable</link></para>

<para>Represents an iterable collection of molecule edges. </para>
</listitem>
            <listitem><para>class <link linkend="_class_m_s_d_1_1_molecule_1_1___node">_Node</link></para>

<para>Represents a specific molecule node. </para>
</listitem>
            <listitem><para>class <link linkend="_class_m_s_d_1_1_molecule_1_1___node_iterable">_NodeIterable</link></para>

<para>Represents an iterable collection of molecule nodes. </para>
</listitem>
            <listitem><para>class <link linkend="_class_m_s_d_1_1_molecule_1_1_edge_parameters">EdgeParameters</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_m_s_d_1_1_molecule_1_1_node_parameters">NodeParameters</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>def <link linkend="_class_m_s_d_1_1_molecule_1afe058d753c9db3cf0d5b68710869c48e">__init__</link> (self, <link linkend="_class_m_s_d_1_1_molecule_1aa5565c13a8bc8fb1ab4e3190639672c3">nodeCount</link>=None, nodeParams=None, c_void_p _proto=None)</para>

<para>Construct a new <link linkend="_class_m_s_d_1_1_molecule">Molecule</link> prototype. </para>
</listitem>
            <listitem><para>def <link linkend="_class_m_s_d_1_1_molecule_1a3a265d48e50c085a9c02bc554720f714">__del__</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_class_m_s_d_1_1_molecule_1a8b91948a7e11bfb7907f5e4ce1f77942">__repr__</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_class_m_s_d_1_1_molecule_1aca495492eb56f4ac07774051d5caa949">serialize</link> (self, bytearray buffer)</para>
</listitem>
            <listitem><para>def <link linkend="_class_m_s_d_1_1_molecule_1aef6e000452ee785068374cbc910dc31c">deserialize</link> (self, bytearray buffer)</para>
</listitem>
            <listitem><para>def <link linkend="_class_m_s_d_1_1_molecule_1a3f804682262be86400ed91f3c56023e0">read</link> (self, istream)</para>
</listitem>
            <listitem><para>def <link linkend="_class_m_s_d_1_1_molecule_1a742353dc64aba048c085f4fef60062da">write</link> (self, ostream)</para>
</listitem>
            <listitem><para>def <link linkend="_class_m_s_d_1_1_molecule_1adff64e13149dd50983f3e93b0d39a796">load</link> (istream)</para>
</listitem>
            <listitem><para>def <link linkend="_class_m_s_d_1_1_molecule_1aa0470ef8a539cdfca21c9e87e566b34b">createNode</link> (self, nodeParams=None)</para>

<para>Creates a new node in the molecule prototype, and returns its index. </para>
</listitem>
            <listitem><para>def <link linkend="_class_m_s_d_1_1_molecule_1a9dbce3502ebfffae2b66569da35f6f2d">connectNodes</link> (self, nodeA, nodeB, edgeParams=None)</para>

<para>Connects the two given nodes (by index), and returns an edge index of the newly constructed edge. </para>
</listitem>
            <listitem><para>def <link linkend="_class_m_s_d_1_1_molecule_1add79e5543465e6ed2ad5311e68ca58e6">edgeIndex</link> (self, nodeA, nodeB)</para>

<para>Search for and return the index of the edge connecting the given nodes if one exists, or <link linkend="_class_m_s_d_1_1_molecule_1ac8e2e8dea2f8727b28cbee51c3a101b9">Molecule.NOT_FOUND</link> if one doesn&apos;t. </para>
</listitem>
            <listitem><para>def <link linkend="_class_m_s_d_1_1_molecule_1a42fc3d70b1cbc86862d2c46b6df1ad23">getEdgeParameters</link> (self, index)</para>
</listitem>
            <listitem><para>def <link linkend="_class_m_s_d_1_1_molecule_1a22a49ce23970c6f2d947e8286c99e734">setEdgeParamters</link> (self, index, edgeParams)</para>
</listitem>
            <listitem><para>def <link linkend="_class_m_s_d_1_1_molecule_1a881beff35e23665c6ecc475fa89ce59b">getNodeParameters</link> (self, index)</para>
</listitem>
            <listitem><para>def <link linkend="_class_m_s_d_1_1_molecule_1a7d57d7f96fbfdd62f979b3517f4c625c">setNodeParamters</link> (self, index, nodeParams)</para>
</listitem>
            <listitem><para>def <link linkend="_class_m_s_d_1_1_molecule_1aaa48726f43960f87a3b13f30321dea4b">setAllParameters</link> (self, nodeParams, edgeParams)</para>
</listitem>
            <listitem><para>def <link linkend="_class_m_s_d_1_1_molecule_1a3a171b9340edf8212a9261b1126770e3">getAdjacencyList</link> (self, nodeIndex)</para>
</listitem>
            <listitem><para>def <link linkend="_class_m_s_d_1_1_molecule_1ac988912510219e64a5c1268f4c5327d8">edgesUnique</link> (self)</para>

<para>Builds and returns a list of edges which contain uniqie edgeIndexes. </para>
</listitem>
            <listitem><para>def <link linkend="_class_m_s_d_1_1_molecule_1a3c29c31f46b7c686aaed4e7e490afe16">mmt</link> (self)</para>

<para>MMT formated string. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_m_s_d_1_1_molecule_1a45afbff05d423defc9129c9592654e00">HEADER</link> = c_char_p.in_dll(<link linkend="_namespace_m_s_d_1a46a9adbfe86657baee2dde058b055f93">msd_clib</link>, &quot;HEADER&quot;)</para>
</listitem>
            <listitem><para><link linkend="_class_m_s_d_1_1_molecule_1a25db925faa84759a58ebedc6298cd7e4">HEADER_SIZE</link> = c_size_t.in_dll(<link linkend="_namespace_m_s_d_1a46a9adbfe86657baee2dde058b055f93">msd_clib</link>, &quot;HEADER_SIZE&quot;)</para>
</listitem>
            <listitem><para><link linkend="_class_m_s_d_1_1_molecule_1ac8e2e8dea2f8727b28cbee51c3a101b9">NOT_FOUND</link> = c_uint.in_dll(<link linkend="_namespace_m_s_d_1a46a9adbfe86657baee2dde058b055f93">msd_clib</link>, &quot;NOT_FOUND&quot;)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Properties    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_m_s_d_1_1_molecule_1ae017b17709a7e64589b710be7d36b927">serializationSize</link> = property(fget = lambda self: msd_clib.serializationSize(self._proto))</para>
</listitem>
            <listitem><para><link linkend="_class_m_s_d_1_1_molecule_1aa5565c13a8bc8fb1ab4e3190639672c3">nodeCount</link> = property(fget = lambda self: msd_clib.nodeCount(self._proto))</para>
</listitem>
            <listitem><para><link linkend="_class_m_s_d_1_1_molecule_1a3ac4b63ed6ca985618d31cdc9cdb3f00">leftLead</link></para>
</listitem>
            <listitem><para><link linkend="_class_m_s_d_1_1_molecule_1a1f99fe9da8535f85ac7adafbeaf496a7">rightLead</link></para>
</listitem>
            <listitem><para><link linkend="_class_m_s_d_1_1_molecule_1a6b394566de0788819f57564595779fc1">leads</link></para>
</listitem>
            <listitem><para><link linkend="_class_m_s_d_1_1_molecule_1ac2da6ac139c0eaa0766e362d457be3a6">nodes</link> = property(fget = lambda self: <link linkend="_class_m_s_d_1_1_molecule_1_1___node_iterable">Molecule._NodeIterable</link>(msd_clib.createNodes(self._proto)))</para>
</listitem>
            <listitem><para><link linkend="_class_m_s_d_1_1_molecule_1a9f39385fd994d8ed25c77703263e8a31">edges</link> = property(fget = lambda self: <link linkend="_class_m_s_d_1_1_molecule_1_1___edge_iterable">Molecule._EdgeIterable</link>(msd_clib.createEdges(self._proto)))</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_m_s_d_1_1_molecule_1afe058d753c9db3cf0d5b68710869c48e"/><section>
    <title>__init__()</title>
<indexterm><primary>__init__</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>__init__</secondary></indexterm>
<para><computeroutput>def MSD.Molecule.__init__ ( self,  nodeCount = <computeroutput>None</computeroutput>
,  nodeParams = <computeroutput>None</computeroutput>
, c_void_p  _proto = <computeroutput>None</computeroutput>
)</computeroutput></para><para>

<para>Construct a new <link linkend="_class_m_s_d_1_1_molecule">Molecule</link> prototype. </para>
</para>

<para>An Optional nodeCount, and initial <link linkend="_class_m_s_d_1_1_molecule_1_1_node_parameters">NodeParameters</link> can be given. If nodeCount is None, an empty prototype is created with no nodes, and no edges.</para>

<para>Both the left and right leads are initialized to 0.</para>

<para>Note: _proto parameter is reserved for internal use only! </para>
</section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1a3a265d48e50c085a9c02bc554720f714"/><section>
    <title>__del__()</title>
<indexterm><primary>__del__</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>__del__</secondary></indexterm>
<para><computeroutput>def MSD.Molecule.__del__ ( self)</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_m_s_d_1_1_molecule_1a8b91948a7e11bfb7907f5e4ce1f77942"/><section>
    <title>__repr__()</title>
<indexterm><primary>__repr__</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>__repr__</secondary></indexterm>
<para><computeroutput>def MSD.Molecule.__repr__ ( self)</computeroutput></para></section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1a9dbce3502ebfffae2b66569da35f6f2d"/><section>
    <title>connectNodes()</title>
<indexterm><primary>connectNodes</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>connectNodes</secondary></indexterm>
<para><computeroutput>def MSD.Molecule.connectNodes ( self,  nodeA,  nodeB,  edgeParams = <computeroutput>None</computeroutput>
)</computeroutput></para><para>

<para>Connects the two given nodes (by index), and returns an edge index of the newly constructed edge. </para>
</para>

<para>Optional <link linkend="_class_m_s_d_1_1_molecule_1_1_edge_parameters">EdgeParameters</link> can be given.</para>

<para>Note: this method does not check if the two nodes are already connected. It is possible to creates more then one edge connecting the same two nodes.</para>

<para>If edgeParam is None, this method the uses C++ defaults for nodeParams. This should have the same effect as using a default-constructed Python NodeParameter object. </para>
</section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1aa0470ef8a539cdfca21c9e87e566b34b"/><section>
    <title>createNode()</title>
<indexterm><primary>createNode</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>createNode</secondary></indexterm>
<para><computeroutput>def MSD.Molecule.createNode ( self,  nodeParams = <computeroutput>None</computeroutput>
)</computeroutput></para><para>

<para>Creates a new node in the molecule prototype, and returns its index. </para>
</para>

<para>Optional <link linkend="_class_m_s_d_1_1_molecule_1_1_node_parameters">NodeParameters</link> can be given. Returns the new node&apos;s index.</para>

<para>If nodeParam is None, this method uses C++ defaults for nodeParams. This should have the same effect as using a default-constructed Python NodeParameter object. </para>
</section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1aef6e000452ee785068374cbc910dc31c"/><section>
    <title>deserialize()</title>
<indexterm><primary>deserialize</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>deserialize</secondary></indexterm>
<para><computeroutput>def MSD.Molecule.deserialize ( self, bytearray buffer)</computeroutput></para></section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1add79e5543465e6ed2ad5311e68ca58e6"/><section>
    <title>edgeIndex()</title>
<indexterm><primary>edgeIndex</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>edgeIndex</secondary></indexterm>
<para><computeroutput>def MSD.Molecule.edgeIndex ( self,  nodeA,  nodeB)</computeroutput></para><para>

<para>Search for and return the index of the edge connecting the given nodes if one exists, or <link linkend="_class_m_s_d_1_1_molecule_1ac8e2e8dea2f8727b28cbee51c3a101b9">Molecule.NOT_FOUND</link> if one doesn&apos;t. </para>
</para>
</section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1ac988912510219e64a5c1268f4c5327d8"/><section>
    <title>edgesUnique()</title>
<indexterm><primary>edgesUnique</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>edgesUnique</secondary></indexterm>
<para><computeroutput>def MSD.Molecule.edgesUnique ( self)</computeroutput></para><para>

<para>Builds and returns a list of edges which contain uniqie edgeIndexes. </para>
</para>

<para>Useful since edges are directional and edges between two different nodes will be duplicated.</para>

<para>The elements of the list will be <link linkend="_class_m_s_d_1_1_molecule_1_1___edge">Molecule._Edge</link> objects, which are themselves iterable. But iterating on these objects will return &quot;duplicated&quot; edges (edges with the same edgeIndex) from the underlying <link linkend="_class_m_s_d_1_1_molecule_1_1___edge_iterable">Molecule._EdgeIterable</link>. </para>
</section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1a3a171b9340edf8212a9261b1126770e3"/><section>
    <title>getAdjacencyList()</title>
<indexterm><primary>getAdjacencyList</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>getAdjacencyList</secondary></indexterm>
<para><computeroutput>def MSD.Molecule.getAdjacencyList ( self,  nodeIndex)</computeroutput></para></section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1a42fc3d70b1cbc86862d2c46b6df1ad23"/><section>
    <title>getEdgeParameters()</title>
<indexterm><primary>getEdgeParameters</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>getEdgeParameters</secondary></indexterm>
<para><computeroutput>def MSD.Molecule.getEdgeParameters ( self,  index)</computeroutput></para></section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1a881beff35e23665c6ecc475fa89ce59b"/><section>
    <title>getNodeParameters()</title>
<indexterm><primary>getNodeParameters</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>getNodeParameters</secondary></indexterm>
<para><computeroutput>def MSD.Molecule.getNodeParameters ( self,  index)</computeroutput></para></section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1adff64e13149dd50983f3e93b0d39a796"/><section>
    <title>load()</title>
<indexterm><primary>load</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>load</secondary></indexterm>
<para><computeroutput>def MSD.Molecule.load ( istream)</computeroutput></para></section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1a3c29c31f46b7c686aaed4e7e490afe16"/><section>
    <title>mmt()</title>
<indexterm><primary>mmt</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>mmt</secondary></indexterm>
<para><computeroutput>def MSD.Molecule.mmt ( self)</computeroutput></para><para>

<para>MMT formated string. </para>
</para>
</section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1a3f804682262be86400ed91f3c56023e0"/><section>
    <title>read()</title>
<indexterm><primary>read</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>read</secondary></indexterm>
<para><computeroutput>def MSD.Molecule.read ( self,  istream)</computeroutput></para></section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1aca495492eb56f4ac07774051d5caa949"/><section>
    <title>serialize()</title>
<indexterm><primary>serialize</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>serialize</secondary></indexterm>
<para><computeroutput>def MSD.Molecule.serialize ( self, bytearray buffer)</computeroutput></para></section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1aaa48726f43960f87a3b13f30321dea4b"/><section>
    <title>setAllParameters()</title>
<indexterm><primary>setAllParameters</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>setAllParameters</secondary></indexterm>
<para><computeroutput>def MSD.Molecule.setAllParameters ( self,  nodeParams,  edgeParams)</computeroutput></para></section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1a22a49ce23970c6f2d947e8286c99e734"/><section>
    <title>setEdgeParamters()</title>
<indexterm><primary>setEdgeParamters</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>setEdgeParamters</secondary></indexterm>
<para><computeroutput>def MSD.Molecule.setEdgeParamters ( self,  index,  edgeParams)</computeroutput></para></section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1a7d57d7f96fbfdd62f979b3517f4c625c"/><section>
    <title>setNodeParamters()</title>
<indexterm><primary>setNodeParamters</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>setNodeParamters</secondary></indexterm>
<para><computeroutput>def MSD.Molecule.setNodeParamters ( self,  index,  nodeParams)</computeroutput></para></section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1a742353dc64aba048c085f4fef60062da"/><section>
    <title>write()</title>
<indexterm><primary>write</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>write</secondary></indexterm>
<para><computeroutput>def MSD.Molecule.write ( self,  ostream)</computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_m_s_d_1_1_molecule_1a45afbff05d423defc9129c9592654e00"/><section>
    <title>HEADER</title>
<indexterm><primary>HEADER</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>HEADER</secondary></indexterm>
<para><computeroutput>MSD.Molecule.HEADER = c_char_p.in_dll(<link linkend="_namespace_m_s_d_1a46a9adbfe86657baee2dde058b055f93">msd_clib</link>, &quot;HEADER&quot;)<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1a25db925faa84759a58ebedc6298cd7e4"/><section>
    <title>HEADER_SIZE</title>
<indexterm><primary>HEADER_SIZE</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>HEADER_SIZE</secondary></indexterm>
<para><computeroutput>MSD.Molecule.HEADER_SIZE = c_size_t.in_dll(<link linkend="_namespace_m_s_d_1a46a9adbfe86657baee2dde058b055f93">msd_clib</link>, &quot;HEADER_SIZE&quot;)<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1ac8e2e8dea2f8727b28cbee51c3a101b9"/><section>
    <title>NOT_FOUND</title>
<indexterm><primary>NOT_FOUND</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>NOT_FOUND</secondary></indexterm>
<para><computeroutput>MSD.Molecule.NOT_FOUND = c_uint.in_dll(<link linkend="_namespace_m_s_d_1a46a9adbfe86657baee2dde058b055f93">msd_clib</link>, &quot;NOT_FOUND&quot;)<computeroutput>[static]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Property Documentation</title>
<anchor xml:id="_class_m_s_d_1_1_molecule_1a9f39385fd994d8ed25c77703263e8a31"/><section>
    <title>edges</title>
<indexterm><primary>edges</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>edges</secondary></indexterm>
<para><computeroutput>MSD.Molecule.edges = property(fget = lambda self: <link linkend="_class_m_s_d_1_1_molecule_1_1___edge_iterable">Molecule._EdgeIterable</link>(msd_clib.createEdges(self._proto)))<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1a6b394566de0788819f57564595779fc1"/><section>
    <title>leads</title>
<indexterm><primary>leads</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>leads</secondary></indexterm>
<para><computeroutput>MSD.Molecule.leads<computeroutput>[static]</computeroutput></computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=&#32;&#32;property(
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fget&#32;=&#32;<emphasis role="keyword">lambda</emphasis>&#32;self:&#32;_tupler(msd_clib.getLeads,&#32;self._proto,&#32;2&#32;*&#32;[c_uint]),
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fset&#32;=&#32;<emphasis role="keyword">lambda</emphasis>&#32;self,&#32;leads:&#32;msd_clib.setLeads(self._proto,&#32;*leads)
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
</programlisting></section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1a3ac4b63ed6ca985618d31cdc9cdb3f00"/><section>
    <title>leftLead</title>
<indexterm><primary>leftLead</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>leftLead</secondary></indexterm>
<para><computeroutput>MSD.Molecule.leftLead<computeroutput>[static]</computeroutput></computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=&#32;&#32;property(
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fget&#32;=&#32;<emphasis role="keyword">lambda</emphasis>&#32;self:&#32;msd_clib.getLeftLead(self._proto),
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fset&#32;=&#32;<emphasis role="keyword">lambda</emphasis>&#32;self,&#32;node:&#32;msd_clib.setLeftLead(self._proto,&#32;node)
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
</programlisting></section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1aa5565c13a8bc8fb1ab4e3190639672c3"/><section>
    <title>nodeCount</title>
<indexterm><primary>nodeCount</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>nodeCount</secondary></indexterm>
<para><computeroutput>MSD.Molecule.nodeCount = property(fget = lambda self: msd_clib.nodeCount(self._proto))<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1ac2da6ac139c0eaa0766e362d457be3a6"/><section>
    <title>nodes</title>
<indexterm><primary>nodes</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>nodes</secondary></indexterm>
<para><computeroutput>MSD.Molecule.nodes = property(fget = lambda self: <link linkend="_class_m_s_d_1_1_molecule_1_1___node_iterable">Molecule._NodeIterable</link>(msd_clib.createNodes(self._proto)))<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1a1f99fe9da8535f85ac7adafbeaf496a7"/><section>
    <title>rightLead</title>
<indexterm><primary>rightLead</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>rightLead</secondary></indexterm>
<para><computeroutput>MSD.Molecule.rightLead<computeroutput>[static]</computeroutput></computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=&#32;&#32;property(
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fget&#32;=&#32;<emphasis role="keyword">lambda</emphasis>&#32;self:&#32;msd_clib.getRightLead(self._proto),
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fset&#32;=&#32;<emphasis role="keyword">lambda</emphasis>&#32;self,&#32;node:&#32;msd_clib.setRightLead(self._proto,&#32;node)
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
</programlisting></section>
<anchor xml:id="_class_m_s_d_1_1_molecule_1ae017b17709a7e64589b710be7d36b927"/><section>
    <title>serializationSize</title>
<indexterm><primary>serializationSize</primary><secondary>MSD.Molecule</secondary></indexterm>
<indexterm><primary>MSD.Molecule</primary><secondary>serializationSize</secondary></indexterm>
<para><computeroutput>MSD.Molecule.serializationSize = property(fget = lambda self: msd_clib.serializationSize(self._proto))<computeroutput>[static]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
C:/Users/mathh/GitHub/Molecular-Spintronics-Research-Project/MSD Research Project - Latest Development Version/lib/python/<link linkend="__m_s_d_8py">MSD.py</link></section>
</section>
