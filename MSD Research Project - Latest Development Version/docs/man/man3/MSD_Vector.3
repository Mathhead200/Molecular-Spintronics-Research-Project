.TH "MSD.Vector" 3 "Wed Nov 30 2022" "Version 6.2.1" "MSD" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MSD.Vector \- Python version of \fBudc::Vector\fP class in \fBVector\&.h\fP\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBMSD\&._StructWithDict\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fB__init__\fP (self, *args, **kw)"
.br
.ti -1c
.RI "def \fB__iter__\fP (self)"
.br
.ti -1c
.RI "def \fB__len__\fP (self)"
.br
.ti -1c
.RI "def \fB__getitem__\fP (self, idx)"
.br
.ti -1c
.RI "def \fB__repr__\fP (self)"
.br
.ti -1c
.RI "def \fBcylindricalForm\fP (cls, r, \fBtheta\fP, z)"
.br
.ti -1c
.RI "def \fBpolarForm\fP (cls, r, \fBtheta\fP)"
.br
.ti -1c
.RI "def \fBsphericalForm\fP (cls, rho, \fBtheta\fP, \fBphi\fP)"
.br
.ti -1c
.RI "def \fB__eq__\fP (self, other)"
.br
.ti -1c
.RI "def \fB__ne__\fP (self, other)"
.br
.ti -1c
.RI "def \fB__add__\fP (self, other)"
.br
.ti -1c
.RI "def \fB__neg__\fP (self)"
.br
.ti -1c
.RI "def \fB__sub__\fP (self, other)"
.br
.ti -1c
.RI "def \fB__mul__\fP (self, other)"
.br
.ti -1c
.RI "def \fBdistanceSq\fP (self, other)"
.br
.ti -1c
.RI "def \fBdistance\fP (self, other)"
.br
.ti -1c
.RI "def \fBdotProduct\fP (self, other)"
.br
.ti -1c
.RI "def \fBangleBetween\fP (self, other)"
.br
.ti -1c
.RI "def \fBcrossProduct\fP (self, other)"
.br
.ti -1c
.RI "def \fB__iadd__\fP (self, other)"
.br
.ti -1c
.RI "def \fB__isub__\fP (self, other)"
.br
.ti -1c
.RI "def \fB__imul__\fP (self, other)"
.br
.ti -1c
.RI "def \fBnegate\fP (self)"
.br
.ti -1c
.RI "def \fBrotate\fP (self, \fBtheta\fP, \fBphi\fP=None)"
.br
.ti -1c
.RI "def \fBnormalize\fP (self)"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "\fBI\fP"
.br
.ti -1c
.RI "\fBJ\fP"
.br
.ti -1c
.RI "\fBK\fP"
.br
.ti -1c
.RI "\fBZERO\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "\fBnormSq\fP = property(fget = lambda self: msd_clib\&.normSq(byref(self)))"
.br
.ti -1c
.RI "\fBnorm\fP = property(fget = lambda self: msd_clib\&.norm(byref(self)))"
.br
.ti -1c
.RI "\fBtheta\fP = property(fget = lambda self: msd_clib\&.theta(byref(self)))"
.br
.ti -1c
.RI "\fBphi\fP = property(fget = lambda self: msd_clib\&.phi(byref(self)))"
.br
.in -1c
.SH "Detailed Description"
.PP 
Python version of \fBudc::Vector\fP class in \fBVector\&.h\fP\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "def MSD\&.Vector\&.__init__ ( self, * args, ** kw)"

.PP
Reimplemented from \fBMSD\&._StructWithDict\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "def MSD\&.Vector\&.__add__ ( self,  other)"

.SS "def MSD\&.Vector\&.__eq__ ( self,  other)"

.SS "def MSD\&.Vector\&.__getitem__ ( self,  idx)"

.SS "def MSD\&.Vector\&.__iadd__ ( self,  other)"

.SS "def MSD\&.Vector\&.__imul__ ( self,  other)"

.SS "def MSD\&.Vector\&.__isub__ ( self,  other)"

.SS "def MSD\&.Vector\&.__iter__ ( self)"

.SS "def MSD\&.Vector\&.__len__ ( self)"

.SS "def MSD\&.Vector\&.__mul__ ( self,  other)"

.SS "def MSD\&.Vector\&.__ne__ ( self,  other)"

.SS "def MSD\&.Vector\&.__neg__ ( self)"

.SS "def MSD\&.Vector\&.__repr__ ( self)"

.PP
Reimplemented from \fBMSD\&._StructWithDict\fP\&.
.SS "def MSD\&.Vector\&.__sub__ ( self,  other)"

.SS "def MSD\&.Vector\&.angleBetween ( self,  other)"

.SS "def MSD\&.Vector\&.crossProduct ( self,  other)"

.SS "def MSD\&.Vector\&.cylindricalForm ( cls,  r,  theta,  z)"

.SS "def MSD\&.Vector\&.distance ( self,  other)"

.SS "def MSD\&.Vector\&.distanceSq ( self,  other)"

.SS "def MSD\&.Vector\&.dotProduct ( self,  other)"

.SS "def MSD\&.Vector\&.negate ( self)"

.SS "def MSD\&.Vector\&.normalize ( self)"

.SS "def MSD\&.Vector\&.polarForm ( cls,  r,  theta)"

.SS "def MSD\&.Vector\&.rotate ( self,  theta,  phi = \fCNone\fP)"

.SS "def MSD\&.Vector\&.sphericalForm ( cls,  rho,  theta,  phi)"

.SH "Member Data Documentation"
.PP 
.SS "MSD\&.Vector\&.I\fC [static]\fP"

.SS "MSD\&.Vector\&.J\fC [static]\fP"

.SS "MSD\&.Vector\&.K\fC [static]\fP"

.SS "MSD\&.Vector\&.ZERO\fC [static]\fP"

.SH "Property Documentation"
.PP 
.SS "MSD\&.Vector\&.norm = property(fget = lambda self: msd_clib\&.norm(byref(self)))\fC [static]\fP"

.SS "MSD\&.Vector\&.normSq = property(fget = lambda self: msd_clib\&.normSq(byref(self)))\fC [static]\fP"

.SS "MSD\&.Vector\&.phi = property(fget = lambda self: msd_clib\&.phi(byref(self)))\fC [static]\fP"

.SS "MSD\&.Vector\&.theta = property(fget = lambda self: msd_clib\&.theta(byref(self)))\fC [static]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for MSD from the source code\&.
