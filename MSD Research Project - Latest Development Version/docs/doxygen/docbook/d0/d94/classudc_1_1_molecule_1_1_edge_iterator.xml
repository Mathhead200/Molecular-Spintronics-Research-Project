<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classudc_1_1_molecule_1_1_edge_iterator" xml:lang="en-US">
<title>udc::Molecule::EdgeIterator Class Reference</title>
<indexterm><primary>udc::Molecule::EdgeIterator</primary></indexterm>
<para>
<computeroutput>#include &lt;MSD.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>unsigned int <link linkend="_classudc_1_1_molecule_1_1_edge_iterator_1ad88f7e40ebfe2511a137aa4c92e1d51a">getIndex</link> () const</para>
</listitem>
            <listitem><para><link linkend="_structudc_1_1_molecule_1_1_edge_parameters">EdgeParameters</link> <link linkend="_classudc_1_1_molecule_1_1_edge_iterator_1a09e7bf9b99075469f710f08beea71685">getParameters</link> () const</para>
</listitem>
            <listitem><para>unsigned int <link linkend="_classudc_1_1_molecule_1_1_edge_iterator_1a72e95da607f48a728dd556cda7e207ae">src</link> () const</para>
</listitem>
            <listitem><para>unsigned int <link linkend="_classudc_1_1_molecule_1_1_edge_iterator_1ab072345b8ea0ec27afc7772f9c0a7c1a">dest</link> () const</para>
</listitem>
            <listitem><para>double <link linkend="_classudc_1_1_molecule_1_1_edge_iterator_1a30e4e4bd72065262b480647727a756f4">getDirection</link> () const</para>
</listitem>
            <listitem><para>unsigned int <link linkend="_classudc_1_1_molecule_1_1_edge_iterator_1a57789b552f047e491ef01f662f4cb0d3">operator*</link> () const</para>
</listitem>
            <listitem><para>unsigned int <link linkend="_classudc_1_1_molecule_1_1_edge_iterator_1a474258db92785d660b20d5199f2dad29">operator[]</link> (int) const</para>
</listitem>
            <listitem><para><link linkend="_classudc_1_1_molecule_1_1_edge_iterator_1a03a41c5c9ec4fef981f671001d73ea28">operator unsigned int</link> () const</para>
</listitem>
            <listitem><para><link linkend="_classudc_1_1_molecule_1_1_edge_iterator">EdgeIterator</link> &amp; <link linkend="_classudc_1_1_molecule_1_1_edge_iterator_1a7f4f13887c99c74b0dbfdaac40d01472">operator++</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classudc_1_1_molecule_1_1_edge_iterator">EdgeIterator</link> <link linkend="_classudc_1_1_molecule_1_1_edge_iterator_1ad14863df866484bf6e1b6c31b116868d">operator++</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_classudc_1_1_molecule_1_1_edge_iterator">EdgeIterator</link> &amp; <link linkend="_classudc_1_1_molecule_1_1_edge_iterator_1a68c1eea291e0a2b6e8240582366e2067">operator--</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classudc_1_1_molecule_1_1_edge_iterator">EdgeIterator</link> <link linkend="_classudc_1_1_molecule_1_1_edge_iterator_1a3825444808e7a5c693e193bafee79698">operator--</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_classudc_1_1_molecule_1_1_edge_iterator">EdgeIterator</link> &amp; <link linkend="_classudc_1_1_molecule_1_1_edge_iterator_1acbfe20ee73fe60d7dc5f9113184aa243">operator+=</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_classudc_1_1_molecule_1_1_edge_iterator">EdgeIterator</link> &amp; <link linkend="_classudc_1_1_molecule_1_1_edge_iterator_1a81a47567f40b2f2b59a00e623ae0ba7d">operator-=</link> (int)</para>
</listitem>
            <listitem><para><link linkend="_classudc_1_1_molecule_1_1_edge_iterator">EdgeIterator</link> <link linkend="_classudc_1_1_molecule_1_1_edge_iterator_1a8eb84273f87c1ba1bdc95ed7a38bdb74">operator+</link> (int) const</para>
</listitem>
            <listitem><para><link linkend="_classudc_1_1_molecule_1_1_edge_iterator">EdgeIterator</link> <link linkend="_classudc_1_1_molecule_1_1_edge_iterator_1af2a54a5b128f4bce68c21aa3156df2e6">operator-</link> (int) const</para>
</listitem>
            <listitem><para>bool <link linkend="_classudc_1_1_molecule_1_1_edge_iterator_1a9caef518cfd1939e0fc1c054fdebc2fb">operator==</link> (const <link linkend="_classudc_1_1_molecule_1_1_edge_iterator">EdgeIterator</link> &amp;) const</para>
</listitem>
            <listitem><para>bool <link linkend="_classudc_1_1_molecule_1_1_edge_iterator_1a3308b9ac135787346d5068f6c73d3650">operator!=</link> (const <link linkend="_classudc_1_1_molecule_1_1_edge_iterator">EdgeIterator</link> &amp;) const</para>
</listitem>
            <listitem><para>bool <link linkend="_classudc_1_1_molecule_1_1_edge_iterator_1a808406f7eac9b3b8502d0c89030b4e79">operator&gt;</link> (const <link linkend="_classudc_1_1_molecule_1_1_edge_iterator">EdgeIterator</link> &amp;) const</para>
</listitem>
            <listitem><para>bool <link linkend="_classudc_1_1_molecule_1_1_edge_iterator_1af0de103fa148c030788a5715f3c46b72">operator&lt;</link> (const <link linkend="_classudc_1_1_molecule_1_1_edge_iterator">EdgeIterator</link> &amp;) const</para>
</listitem>
            <listitem><para>bool <link linkend="_classudc_1_1_molecule_1_1_edge_iterator_1abcb719bc3b5ac22fa2a6b5895ec4070b">operator&gt;=</link> (const <link linkend="_classudc_1_1_molecule_1_1_edge_iterator">EdgeIterator</link> &amp;) const</para>
</listitem>
            <listitem><para>bool <link linkend="_classudc_1_1_molecule_1_1_edge_iterator_1ac42d179444c1f9a7b47245cd3d472847">operator&lt;=</link> (const <link linkend="_classudc_1_1_molecule_1_1_edge_iterator">EdgeIterator</link> &amp;) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Friends    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classudc_1_1_molecule_1_1_edge_iterator_1a42f28c138ebcdfdd1e070af8f413a19e">EdgeIterable</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classudc_1_1_molecule_1_1_edge_iterator_1ab072345b8ea0ec27afc7772f9c0a7c1a"/><section>
    <title>dest()</title>
<indexterm><primary>dest</primary><secondary>udc::Molecule::EdgeIterator</secondary></indexterm>
<indexterm><primary>udc::Molecule::EdgeIterator</primary><secondary>dest</secondary></indexterm>
<para><computeroutput>unsigned int udc::Molecule::EdgeIterator::dest ( ) const</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_molecule_1_1_edge_iterator_1a30e4e4bd72065262b480647727a756f4"/><section>
    <title>getDirection()</title>
<indexterm><primary>getDirection</primary><secondary>udc::Molecule::EdgeIterator</secondary></indexterm>
<indexterm><primary>udc::Molecule::EdgeIterator</primary><secondary>getDirection</secondary></indexterm>
<para><computeroutput>double udc::Molecule::EdgeIterator::getDirection ( ) const</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_molecule_1_1_edge_iterator_1ad88f7e40ebfe2511a137aa4c92e1d51a"/><section>
    <title>getIndex()</title>
<indexterm><primary>getIndex</primary><secondary>udc::Molecule::EdgeIterator</secondary></indexterm>
<indexterm><primary>udc::Molecule::EdgeIterator</primary><secondary>getIndex</secondary></indexterm>
<para><computeroutput>unsigned int udc::Molecule::EdgeIterator::getIndex ( ) const</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_molecule_1_1_edge_iterator_1a09e7bf9b99075469f710f08beea71685"/><section>
    <title>getParameters()</title>
<indexterm><primary>getParameters</primary><secondary>udc::Molecule::EdgeIterator</secondary></indexterm>
<indexterm><primary>udc::Molecule::EdgeIterator</primary><secondary>getParameters</secondary></indexterm>
<para><computeroutput><link linkend="_structudc_1_1_molecule_1_1_edge_parameters">Molecule::EdgeParameters</link> udc::Molecule::EdgeIterator::getParameters ( ) const</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_molecule_1_1_edge_iterator_1a03a41c5c9ec4fef981f671001d73ea28"/><section>
    <title>operator unsigned int()</title>
<indexterm><primary>operator unsigned int</primary><secondary>udc::Molecule::EdgeIterator</secondary></indexterm>
<indexterm><primary>udc::Molecule::EdgeIterator</primary><secondary>operator unsigned int</secondary></indexterm>
<para><computeroutput>udc::Molecule::EdgeIterator::operator unsigned int ( ) const</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_molecule_1_1_edge_iterator_1a3308b9ac135787346d5068f6c73d3650"/><section>
    <title>operator!=()</title>
<indexterm><primary>operator!=</primary><secondary>udc::Molecule::EdgeIterator</secondary></indexterm>
<indexterm><primary>udc::Molecule::EdgeIterator</primary><secondary>operator!=</secondary></indexterm>
<para><computeroutput>bool udc::Molecule::EdgeIterator::operator!= (const <link linkend="_classudc_1_1_molecule_1_1_edge_iterator">EdgeIterator</link> &amp; iter) const</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_molecule_1_1_edge_iterator_1a57789b552f047e491ef01f662f4cb0d3"/><section>
    <title>operator*()</title>
<indexterm><primary>operator*</primary><secondary>udc::Molecule::EdgeIterator</secondary></indexterm>
<indexterm><primary>udc::Molecule::EdgeIterator</primary><secondary>operator*</secondary></indexterm>
<para><computeroutput>unsigned int udc::Molecule::EdgeIterator::operator* ( ) const</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_molecule_1_1_edge_iterator_1a8eb84273f87c1ba1bdc95ed7a38bdb74"/><section>
    <title>operator+()</title>
<indexterm><primary>operator+</primary><secondary>udc::Molecule::EdgeIterator</secondary></indexterm>
<indexterm><primary>udc::Molecule::EdgeIterator</primary><secondary>operator+</secondary></indexterm>
<para><computeroutput><link linkend="_classudc_1_1_molecule_1_1_edge_iterator">Molecule::EdgeIterator</link> udc::Molecule::EdgeIterator::operator+ (int offset) const</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_molecule_1_1_edge_iterator_1a7f4f13887c99c74b0dbfdaac40d01472"/><section>
    <title>operator++()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>udc::Molecule::EdgeIterator</secondary></indexterm>
<indexterm><primary>udc::Molecule::EdgeIterator</primary><secondary>operator++</secondary></indexterm>
<para><computeroutput><link linkend="_classudc_1_1_molecule_1_1_edge_iterator">Molecule::EdgeIterator</link> &amp; udc::Molecule::EdgeIterator::operator++ ( )</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_molecule_1_1_edge_iterator_1ad14863df866484bf6e1b6c31b116868d"/><section>
    <title>operator++()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>udc::Molecule::EdgeIterator</secondary></indexterm>
<indexterm><primary>udc::Molecule::EdgeIterator</primary><secondary>operator++</secondary></indexterm>
<para><computeroutput><link linkend="_classudc_1_1_molecule_1_1_edge_iterator">Molecule::EdgeIterator</link> udc::Molecule::EdgeIterator::operator++ (int )</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_molecule_1_1_edge_iterator_1acbfe20ee73fe60d7dc5f9113184aa243"/><section>
    <title>operator+=()</title>
<indexterm><primary>operator+=</primary><secondary>udc::Molecule::EdgeIterator</secondary></indexterm>
<indexterm><primary>udc::Molecule::EdgeIterator</primary><secondary>operator+=</secondary></indexterm>
<para><computeroutput><link linkend="_classudc_1_1_molecule_1_1_edge_iterator">Molecule::EdgeIterator</link> &amp; udc::Molecule::EdgeIterator::operator+= (int offset)</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_molecule_1_1_edge_iterator_1af2a54a5b128f4bce68c21aa3156df2e6"/><section>
    <title>operator-()</title>
<indexterm><primary>operator-</primary><secondary>udc::Molecule::EdgeIterator</secondary></indexterm>
<indexterm><primary>udc::Molecule::EdgeIterator</primary><secondary>operator-</secondary></indexterm>
<para><computeroutput><link linkend="_classudc_1_1_molecule_1_1_edge_iterator">Molecule::EdgeIterator</link> udc::Molecule::EdgeIterator::operator- (int offset) const</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_molecule_1_1_edge_iterator_1a68c1eea291e0a2b6e8240582366e2067"/><section>
    <title>operator--()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>udc::Molecule::EdgeIterator</secondary></indexterm>
<indexterm><primary>udc::Molecule::EdgeIterator</primary><secondary>operator--</secondary></indexterm>
<para><computeroutput><link linkend="_classudc_1_1_molecule_1_1_edge_iterator">Molecule::EdgeIterator</link> &amp; udc::Molecule::EdgeIterator::operator-- ( )</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_molecule_1_1_edge_iterator_1a3825444808e7a5c693e193bafee79698"/><section>
    <title>operator--()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>udc::Molecule::EdgeIterator</secondary></indexterm>
<indexterm><primary>udc::Molecule::EdgeIterator</primary><secondary>operator--</secondary></indexterm>
<para><computeroutput><link linkend="_classudc_1_1_molecule_1_1_edge_iterator">Molecule::EdgeIterator</link> udc::Molecule::EdgeIterator::operator-- (int )</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_molecule_1_1_edge_iterator_1a81a47567f40b2f2b59a00e623ae0ba7d"/><section>
    <title>operator-=()</title>
<indexterm><primary>operator-=</primary><secondary>udc::Molecule::EdgeIterator</secondary></indexterm>
<indexterm><primary>udc::Molecule::EdgeIterator</primary><secondary>operator-=</secondary></indexterm>
<para><computeroutput><link linkend="_classudc_1_1_molecule_1_1_edge_iterator">Molecule::EdgeIterator</link> &amp; udc::Molecule::EdgeIterator::operator-= (int offset)</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_molecule_1_1_edge_iterator_1af0de103fa148c030788a5715f3c46b72"/><section>
    <title>operator&lt;()</title>
<indexterm><primary>operator&lt;</primary><secondary>udc::Molecule::EdgeIterator</secondary></indexterm>
<indexterm><primary>udc::Molecule::EdgeIterator</primary><secondary>operator&lt;</secondary></indexterm>
<para><computeroutput>bool udc::Molecule::EdgeIterator::operator&lt; (const <link linkend="_classudc_1_1_molecule_1_1_edge_iterator">EdgeIterator</link> &amp; iter) const</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_molecule_1_1_edge_iterator_1ac42d179444c1f9a7b47245cd3d472847"/><section>
    <title>operator&lt;=()</title>
<indexterm><primary>operator&lt;=</primary><secondary>udc::Molecule::EdgeIterator</secondary></indexterm>
<indexterm><primary>udc::Molecule::EdgeIterator</primary><secondary>operator&lt;=</secondary></indexterm>
<para><computeroutput>bool udc::Molecule::EdgeIterator::operator&lt;= (const <link linkend="_classudc_1_1_molecule_1_1_edge_iterator">EdgeIterator</link> &amp; iter) const</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_molecule_1_1_edge_iterator_1a9caef518cfd1939e0fc1c054fdebc2fb"/><section>
    <title>operator==()</title>
<indexterm><primary>operator==</primary><secondary>udc::Molecule::EdgeIterator</secondary></indexterm>
<indexterm><primary>udc::Molecule::EdgeIterator</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput>bool udc::Molecule::EdgeIterator::operator== (const <link linkend="_classudc_1_1_molecule_1_1_edge_iterator">EdgeIterator</link> &amp; iter) const</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_molecule_1_1_edge_iterator_1a808406f7eac9b3b8502d0c89030b4e79"/><section>
    <title>operator&gt;()</title>
<indexterm><primary>operator&gt;</primary><secondary>udc::Molecule::EdgeIterator</secondary></indexterm>
<indexterm><primary>udc::Molecule::EdgeIterator</primary><secondary>operator&gt;</secondary></indexterm>
<para><computeroutput>bool udc::Molecule::EdgeIterator::operator&gt; (const <link linkend="_classudc_1_1_molecule_1_1_edge_iterator">EdgeIterator</link> &amp; iter) const</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_molecule_1_1_edge_iterator_1abcb719bc3b5ac22fa2a6b5895ec4070b"/><section>
    <title>operator&gt;=()</title>
<indexterm><primary>operator&gt;=</primary><secondary>udc::Molecule::EdgeIterator</secondary></indexterm>
<indexterm><primary>udc::Molecule::EdgeIterator</primary><secondary>operator&gt;=</secondary></indexterm>
<para><computeroutput>bool udc::Molecule::EdgeIterator::operator&gt;= (const <link linkend="_classudc_1_1_molecule_1_1_edge_iterator">EdgeIterator</link> &amp; iter) const</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_molecule_1_1_edge_iterator_1a474258db92785d660b20d5199f2dad29"/><section>
    <title>operator[]()</title>
<indexterm><primary>operator[]</primary><secondary>udc::Molecule::EdgeIterator</secondary></indexterm>
<indexterm><primary>udc::Molecule::EdgeIterator</primary><secondary>operator[]</secondary></indexterm>
<para><computeroutput>unsigned int udc::Molecule::EdgeIterator::operator[] (int offset) const</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_molecule_1_1_edge_iterator_1a72e95da607f48a728dd556cda7e207ae"/><section>
    <title>src()</title>
<indexterm><primary>src</primary><secondary>udc::Molecule::EdgeIterator</secondary></indexterm>
<indexterm><primary>udc::Molecule::EdgeIterator</primary><secondary>src</secondary></indexterm>
<para><computeroutput>unsigned int udc::Molecule::EdgeIterator::src ( ) const</computeroutput></para></section>
</section>
<section>
<title>Friends And Related Function Documentation</title>
<anchor xml:id="_classudc_1_1_molecule_1_1_edge_iterator_1a42f28c138ebcdfdd1e070af8f413a19e"/><section>
    <title>EdgeIterable</title>
<indexterm><primary>EdgeIterable</primary><secondary>udc::Molecule::EdgeIterator</secondary></indexterm>
<indexterm><primary>udc::Molecule::EdgeIterator</primary><secondary>EdgeIterable</secondary></indexterm>
<para><computeroutput>friend class <link linkend="_classudc_1_1_molecule_1_1_edge_iterable">EdgeIterable</link><computeroutput>[friend]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
C:/Users/mathh/GitHub/Molecular-Spintronics-Research-Project/MSD Research Project - Latest Development Version/src/<link linkend="__m_s_d_8h">MSD.h</link></section>
</section>
