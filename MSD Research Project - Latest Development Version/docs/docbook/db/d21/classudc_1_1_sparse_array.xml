<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classudc_1_1_sparse_array" xml:lang="en-US">
<title>udc::SparseArray&lt; T &gt; Class Template Reference</title>
<indexterm><primary>udc::SparseArray&lt; T &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;SparseArray.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classudc_1_1_sparse_array_1a6b2c69b5e882d6041ceef3a37fe15a02">SparseArray</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classudc_1_1_sparse_array_1a16578c6d4a9e74cac96d74789c5f0a48">SparseArray</link> (unsigned int <link linkend="_classudc_1_1_sparse_array_1a9403a23fa88896d44b49e515d68f04f6">capacity</link>)</para>
</listitem>
            <listitem><para><link linkend="_classudc_1_1_sparse_array_1a50dde7858264e15303f7e90ae8bc240d">~SparseArray</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classudc_1_1_sparse_array_1a23594c1825bf065889a54187a3491071">SparseArray</link> (const <link linkend="_classudc_1_1_sparse_array">SparseArray</link>&lt; T &gt; &amp;)</para>
</listitem>
            <listitem><para><link linkend="_classudc_1_1_sparse_array">SparseArray</link>&lt; T &gt; &amp; <link linkend="_classudc_1_1_sparse_array_1a7ca09645d3083b5dc1001fa44b8608f2">operator=</link> (const <link linkend="_classudc_1_1_sparse_array">SparseArray</link>&lt; T &gt; &amp;)</para>
</listitem>
            <listitem><para>unsigned int <link linkend="_classudc_1_1_sparse_array_1a9403a23fa88896d44b49e515d68f04f6">capacity</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_classudc_1_1_sparse_array_1afdf642eb989638bb62e21563f83baa1c">resize</link> (unsigned int <link linkend="_classudc_1_1_sparse_array_1a9403a23fa88896d44b49e515d68f04f6">capacity</link>)</para>
</listitem>
            <listitem><para>T &amp; <link linkend="_classudc_1_1_sparse_array_1a489dd0cd13e71c62645789d320ce1bc6">operator[]</link> (unsigned int index)</para>
</listitem>
            <listitem><para>const T &amp; <link linkend="_classudc_1_1_sparse_array_1ac4053a55e9b52246fd78e998631dcd98">operator[]</link> (unsigned int index) const</para>
</listitem>
            <listitem><para>void <link linkend="_classudc_1_1_sparse_array_1ae18b55e238a3a96a733b3caff3dd9ae8">clear</link> (unsigned int index)</para>
</listitem>
            <listitem><para>T &amp; <link linkend="_classudc_1_1_sparse_array_1a9a89430f9cb6b03bfaf249a0ebcbfc8c">at</link> (unsigned int index)</para>
</listitem>
            <listitem><para>const T &amp; <link linkend="_classudc_1_1_sparse_array_1ad68e7e0bc27b653427c9091de3e421b9">at</link> (unsigned int index) const</para>
</listitem>
            <listitem><para>void <link linkend="_classudc_1_1_sparse_array_1a550a858fba0596aeedf061bc068ae062">clearAt</link> (unsigned int index)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classudc_1_1_sparse_array_1a6b2c69b5e882d6041ceef3a37fe15a02"/><section>
    <title>SparseArray()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>SparseArray</primary><secondary>udc::SparseArray&lt; T &gt;</secondary></indexterm>
<indexterm><primary>udc::SparseArray&lt; T &gt;</primary><secondary>SparseArray</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_classudc_1_1_sparse_array">udc::SparseArray</link>&lt; T &gt;::SparseArray ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classudc_1_1_sparse_array_1a16578c6d4a9e74cac96d74789c5f0a48"/><section>
    <title>SparseArray()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>SparseArray</primary><secondary>udc::SparseArray&lt; T &gt;</secondary></indexterm>
<indexterm><primary>udc::SparseArray&lt; T &gt;</primary><secondary>SparseArray</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_classudc_1_1_sparse_array">udc::SparseArray</link>&lt; T &gt;::SparseArray (unsigned int capacity)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classudc_1_1_sparse_array_1a50dde7858264e15303f7e90ae8bc240d"/><section>
    <title>~SparseArray()</title>
<indexterm><primary>~SparseArray</primary><secondary>udc::SparseArray&lt; T &gt;</secondary></indexterm>
<indexterm><primary>udc::SparseArray&lt; T &gt;</primary><secondary>~SparseArray</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_classudc_1_1_sparse_array">udc::SparseArray</link>&lt; T &gt;::~<link linkend="_classudc_1_1_sparse_array">SparseArray</link> ( )<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classudc_1_1_sparse_array_1a23594c1825bf065889a54187a3491071"/><section>
    <title>SparseArray()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>SparseArray</primary><secondary>udc::SparseArray&lt; T &gt;</secondary></indexterm>
<indexterm><primary>udc::SparseArray&lt; T &gt;</primary><secondary>SparseArray</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_classudc_1_1_sparse_array">udc::SparseArray</link>&lt; T &gt;::SparseArray (const <link linkend="_classudc_1_1_sparse_array">SparseArray</link>&lt; T &gt; &amp; )</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classudc_1_1_sparse_array_1a9a89430f9cb6b03bfaf249a0ebcbfc8c"/><section>
    <title>at()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>at</primary><secondary>udc::SparseArray&lt; T &gt;</secondary></indexterm>
<indexterm><primary>udc::SparseArray&lt; T &gt;</primary><secondary>at</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>T &amp; <link linkend="_classudc_1_1_sparse_array">udc::SparseArray</link>&lt; T &gt;::at (unsigned int index)</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_sparse_array_1ad68e7e0bc27b653427c9091de3e421b9"/><section>
    <title>at()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>at</primary><secondary>udc::SparseArray&lt; T &gt;</secondary></indexterm>
<indexterm><primary>udc::SparseArray&lt; T &gt;</primary><secondary>at</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>const T &amp; <link linkend="_classudc_1_1_sparse_array">udc::SparseArray</link>&lt; T &gt;::at (unsigned int index) const</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_sparse_array_1a9403a23fa88896d44b49e515d68f04f6"/><section>
    <title>capacity()</title>
<indexterm><primary>capacity</primary><secondary>udc::SparseArray&lt; T &gt;</secondary></indexterm>
<indexterm><primary>udc::SparseArray&lt; T &gt;</primary><secondary>capacity</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>unsigned int <link linkend="_classudc_1_1_sparse_array">udc::SparseArray</link>&lt; T &gt;::capacity ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classudc_1_1_sparse_array_1ae18b55e238a3a96a733b3caff3dd9ae8"/><section>
    <title>clear()</title>
<indexterm><primary>clear</primary><secondary>udc::SparseArray&lt; T &gt;</secondary></indexterm>
<indexterm><primary>udc::SparseArray&lt; T &gt;</primary><secondary>clear</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>void <link linkend="_classudc_1_1_sparse_array">udc::SparseArray</link>&lt; T &gt;::clear (unsigned int index)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classudc_1_1_sparse_array_1a550a858fba0596aeedf061bc068ae062"/><section>
    <title>clearAt()</title>
<indexterm><primary>clearAt</primary><secondary>udc::SparseArray&lt; T &gt;</secondary></indexterm>
<indexterm><primary>udc::SparseArray&lt; T &gt;</primary><secondary>clearAt</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>void <link linkend="_classudc_1_1_sparse_array">udc::SparseArray</link>&lt; T &gt;::clearAt (unsigned int index)</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_sparse_array_1a7ca09645d3083b5dc1001fa44b8608f2"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>udc::SparseArray&lt; T &gt;</secondary></indexterm>
<indexterm><primary>udc::SparseArray&lt; T &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_classudc_1_1_sparse_array">SparseArray</link>&lt; T &gt; &amp; <link linkend="_classudc_1_1_sparse_array">udc::SparseArray</link>&lt; T &gt;::operator= (const <link linkend="_classudc_1_1_sparse_array">SparseArray</link>&lt; T &gt; &amp; )</computeroutput></para></section>
<anchor xml:id="_classudc_1_1_sparse_array_1a489dd0cd13e71c62645789d320ce1bc6"/><section>
    <title>operator[]()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator[]</primary><secondary>udc::SparseArray&lt; T &gt;</secondary></indexterm>
<indexterm><primary>udc::SparseArray&lt; T &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>T &amp; <link linkend="_classudc_1_1_sparse_array">udc::SparseArray</link>&lt; T &gt;::operator[] (unsigned int index)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classudc_1_1_sparse_array_1ac4053a55e9b52246fd78e998631dcd98"/><section>
    <title>operator[]()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator[]</primary><secondary>udc::SparseArray&lt; T &gt;</secondary></indexterm>
<indexterm><primary>udc::SparseArray&lt; T &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>const T &amp; <link linkend="_classudc_1_1_sparse_array">udc::SparseArray</link>&lt; T &gt;::operator[] (unsigned int index) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classudc_1_1_sparse_array_1afdf642eb989638bb62e21563f83baa1c"/><section>
    <title>resize()</title>
<indexterm><primary>resize</primary><secondary>udc::SparseArray&lt; T &gt;</secondary></indexterm>
<indexterm><primary>udc::SparseArray&lt; T &gt;</primary><secondary>resize</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>void <link linkend="_classudc_1_1_sparse_array">udc::SparseArray</link>&lt; T &gt;::resize (unsigned int capacity)</computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
C:/Users/mathh/GitHub/Molecular-Spintronics-Research-Project/MSD Research Project - Latest Development Version/src/<link linkend="__sparse_array_8h">SparseArray.h</link></section>
</section>
